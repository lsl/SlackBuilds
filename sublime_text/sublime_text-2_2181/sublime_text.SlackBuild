#!/bin/bash

# Slackware build script for Sublime Text 2 ( Build 2181 )
# Builds a Slackware package from the Sublime Text 2 binary tarballs. 
# Anyone can freely modify and/or distribute this script without restrictions
#
# Written by Luke Williams ( xocel@iquidus.org )

PRGNAM="sublime_text"
VERSION=${VERSION:-2_2181}	
BUILD=${BUILD:-1}
TAG=${TAG:-_xcl}

# Automatically determine the architecture
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}	# For consistency's sake, use this
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}	# Drop the package in /tmp

TARBALL_x86="Sublime Text 2 Build 2181.tar.bz2" # Name of 32bit tarball
TARBALL_x86_64="Sublime Text 2 Build 2181 x64.tar.bz2" # Name of 64bit tarball
TARBALL_ROOT="Sublime Text 2" # Name of tarballs root directory

# Set LIBDIRSUFFIX and TARBALL. 
if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  TARBALL="$TARBALL_x86_64"
else
  LIBDIRSUFFIX=""
  TARBALL="$TARBALL_x86"
fi

SOURCE="$CWD/$TARBALL"
SRCURL="http://c758482.r82.cf2.rackcdn.com/$TARBALL"

# Source file availability:
if ! [ -f "${SOURCE}" ]; then
  if ! [ "x${SRCURL}" == "x" ]; then
    # Check if the $CWD is writable at all - if not, download to $OUTPUT
    [ -w "$CWD" ] || SOURCE="$OUTPUT/$(basename "${SOURCE}")"
    echo "Source '$(basename "${SOURCE}")' not available yet..."
    echo "Will download file to $(dirname "${SOURCE}")"
    wget -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename "${SOURCE}")' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename "${SOURCE}")' not available... aborting the build."
    exit 1
  fi
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf "$TARBALL_ROOT"
tar -xvjf "$CWD/$TARBALL"
cd "$TARBALL_ROOT"
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Copy program binaries into the package
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}
cp -R "$TMP/$TARBALL_ROOT" $PKG/usr/lib${LIBDIRSUFFIX}/$PRGNAM-$VERSION 

# Strip binaries and libraries 
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Copy program documentation into the package
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Copy .desktop file into the package
mkdir -p $PKG/usr/share/applications
cat $CWD/$PRGNAM.desktop > $PKG/usr/share/applications/$PRGNAM.desktop

# Copy slack-desc and doinst.sh into ./install
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Copy icon to pixmaps
mkdir $PKG/usr/share/pixmaps
cp $PKG/usr/lib${LIBDIRSUFFIX}/$PRGNAM-$VERSION/Icon/256x256/$PRGNAM.png $PKG/usr/share/pixmaps/sublime_text.png

# Make the package
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
